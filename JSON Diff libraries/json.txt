JSON Diff Libraries:

1. deep-diff: 

Description: A lightweight library for deep comparison of JavaScript objects, including JSON.
Features:
	•	Supports nested structures (arrays, objects).
	•	Provides detailed diff results including additions, deletions, and changes.

Installation: npm install deep-diff

Usage: 
const deepDiff = require('deep-diff').diff;
const json1 = { name: "John", age: 30, address: { city: "New York" } };
const json2 = { name: "Jane", age: 30, address: { city: "Los Angeles" } };
let differences = deepDiff(json1, json2);
console.log(differences);

Output:

[
  {
    "kind": "E",
    "path": ["name"],
    "lhs": "John",
    "rhs": "Jane"
  },
  {
    "kind": "E",
    "path": ["address", "city"],
    "lhs": "New York",
    "rhs": "Los Angeles"
  }
]

Explanation:
	•	kind: "E" indicates an edit.
	•	path is the location of the difference.
	•	lhs (left-hand side) is the value in json1.
	•	rhs (right-hand side) is the value in json2.







2.  json-diff:

Description: A simple library for comparing JSON objects.
Features:
	•	Provides straightforward diff output.
	•	Easy to use for basic JSON comparisons.

Installation: npm install json-diff
Usage:
const jsonDiff = require('json-diff');
const json1 = { name: "John", age: 30, address: { city: "New York" } };
const json2 = { name: "Jane", age: 30, address: { city: "Los Angeles" } };
let differences = jsonDiff.diffString(json1, json2);
console.log(differences);
Output:
 {
   name: "John" => "Jane"
   address: {
     city: "New York" => "Los Angeles"
   }
 }
Explanation:
	•	=> shows the changes from json1 to json2.






3. fast-json-patch:

Description: A library for applying JSON Patch (RFC 6902) to JSON objects, useful for generating and applying patches.
Features:
	•	Can generate JSON patches from differences.
	•	Can apply JSON patches to objects.

Installation:  npm install fast-json-patch
Usage:
const jsonpatch = require('fast-json-patch');
const json1 = { name: "John", age: 30, address: { city: "New York" } };
const json2 = { name: "Jane", age: 30, address: { city: "Los Angeles" } };
const patch = jsonpatch.compare(json1, json2);
console.log(patch);

Output:
[
  { "op": "replace", "path": "/name", "value": "Jane" },
  { "op": "replace", "path": "/address/city", "value": "Los Angeles" }
]

Explanation:
	•	op: "replace" indicates a replacement operation.
	•	path is the location of the change.
	•	value is the new value in json2.








4. diff:
Description: A general-purpose text diffing library that can be used for JSON as well.
Features:
	•	Provides character-by-character, word-by-word, or line-by-line diff.
	•	Can be adapted to JSON objects.

Installation: npm install diff
Usage:
const Diff = require('diff');
const json1 = JSON.stringify({ name: "John", age: 30, address: { city: "New York" } }, null, 2);
const json2 = JSON.stringify({ name: "Jane", age: 30, address: { city: "Los Angeles" } }, null, 2);
const differences = Diff.diffJson(json1, json2);
differences.forEach(part => {
  const color = part.added ? 'green' :
    part.removed ? 'red' : 'grey';
  process.stderr.write(part.value[color]);
});

Output:
 {
   "name": "John",
+  "name": "Jane",
   "age": 30,
   "address": {
     "city": "New York"
+    "city": "Los Angeles"
   }
 }

Explanation:
	•	+ indicates additions.
	•	- indicates deletions.
	•	This example shows the JSON diff as if it were a text diff, highlighting changes inline.


















